## Code convension for SQL: write reserved words in upper case, write table and field names in lower case.

#
# Queries for retrieving all the objects
#

# fields order for the version table: type(int), version(byte[64])
get.objects.version=SELECT type, version FROM version
# fields order for the forum_group table: id(int), name(String), sort_order(int)
get.objects.forum.group=SELECT id, name, sort_order FROM forum_group
# fields order for the forum table: id(int), forum group(int), rated(int), in_top(int), rate_limit(int), subscribed(boolean), short_name(String), name(String)
get.objects.forum=SELECT id, forum_group_id, rated, in_top, rate_limit, subscribed, short_name, name FROM forum
# fields order for the new_rating table: id(int), message_id(int), rate(int)
get.objects.new.rating=SELECT id, message_id, rate FROM new_rating
# fields order for the message table: id (int), topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), notify_on_response (boolean), read (boolean), favorite (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String), recent_child_date(long)
get.objects.message=SELECT id, topic_id, parent_id, user_id, forum_id, article_id, user_title_color, user_role, notify_on_response, read, favorite, message_date, update_date, moderated_date, subject, message_name, user_nick, user_title, message, recent_child_date FROM message
# fields order for the message table: id (int), topic id (int), parent id (int), forum id (int), user id (int), subject (String), user nick (String), message date (long), update date (long), read (boolean)
get.objects.message.data=SELECT id, topic_id, parent_id, forum_id, user_id, subject, user_nick, message_date, update_date, read FROM message WHERE topic_id = ?
# fields order for the message table: id (int), topic id (int), parent id (int), forum id (int), user id (int), subject (String), user nick (String), message date (long), update date (long), read (boolean)
get.topic.message.data.by.forum.id=SELECT id, topic_id, parent_id, forum_id, user_id, subject, user_nick, message_date, update_date, read FROM message WHERE forum_id = ? AND parent_id = 0
# fields order for the moderate table: message_id(int), user_id(int), forum_id(int), creation_time(long)
get.objects.moderate=SELECT message_id, user_id, forum_id, creation_time FROM moderate
# fields order for the new_message table: id (int), parent_id(int), forum_id(int), subject(String), message(String)
get.objects.new.message=SELECT id, parent_id, forum_id, subject, message FROM new_message
# fields order for the new_moderate table: id (int), message_id (int), action (int), forumId(int), description(String), as_moderator(boolean)
get.objects.new.moderates=SELECT id, message_id, action, forum_id, description, as_moderator FROM new_moderate
# fields order for the user table: id (int), name (String), nick (String), real_name (String), email (String), home_page (String), specialization (String), where_from (String), origin (String)
get.objects.user=SELECT id, name, nick, real_name, email, home_page, specialization, where_from, origin FROM user
# fields order for the rating table: message_id(int), topic_id(int), user_id(int), user_rating(int), rate(int), rate_date(long)
get.objects.rating=SELECT message_id, topic_id, user_id, user_rating, rate, rate_date FROM rating

#
# Queries for retrieving the object by its id
#

# fields order for the version table: type(int), version(byte[64])
get.object.version=SELECT type, version FROM version WHERE type=?
# fields order for the forum_group table: id(int), name(String), sort_order(int)
get.object.forum.group=SELECT id, name, sort_order FROM forum_group WHERE id=?
# fields order for the forum table: id(int), forum group(int), rated(int), in_top(int), rate_limit(int), subscribed(boolean), short_name(String), name(String)
get.object.forum=SELECT id, forum_group_id, rated, in_top, rate_limit, subscribed, short_name, name FROM forum WHERE id=?
# fields order for the message table: id (int), topic id (int), parent id (int), forum id (int), user id (int), subject (String), user nick (String), message date (long), update date (long), read (boolean)
get.object.message.data=SELECT id, topic_id, parent_id, forum_id, user_id, subject, user_nick, message_date, update_date, read FROM message WHERE id = ?
# fields order for the message table: id (int), topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), notify_on_response (boolean), read (boolean), favorite (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String), recent_child_date(long)
get.object.message=SELECT id, topic_id, parent_id, user_id, forum_id, article_id, user_title_color, user_role, notify_on_response, read, favorite, message_date, update_date, moderated_date, subject, message_name, user_nick, user_title, message, recent_child_date FROM message WHERE id=?
# fields order for the new_message table: id (int), parent_id(int), forum_id(int), subject(String), message(String)
get.object.new.message=SELECT id, parent_id, forum_id, subject, message FROM new_message WHERE id=?
# fields order for the new_moderate table: id (int), message_id (int), action (int), forumId(int), description(String), as_moderator(boolean)
get.object.new.moderate=SELECT id, message_id, action, forum_id, description, as_moderator FROM new_moderate WHERE id=?
# fields order for the user table: id (int), name (String), nick (String), real_name (String), email (String), home_page (String), specialization (String), where_from (String), origin (String)
get.object.user=SELECT id, name, nick, real_name, email, home_page, specialization, where_from, origin FROM user WHERE id=?

#
# Queries for getting part(s) of object by object id
#
# fields order for the message table: message (String)
get.object.message.body=SELECT message FROM message WHERE id=?
get.objects.rating.mark.by.message.id=SELECT rate FROM rating WHERE message_id=?
get.objects.new.rating.mark.by.message.id=SELECT rate FROM new_rating WHERE message_id=?

#
# Queries for getting next value for object primary key
#
get.next.id.new.rating=SELECT (IFNULL(MAX(id), 0) + 1) FROM new_rating
get.next.id.new.message=SELECT (IFNULL(MAX(id), 0) + 1) FROM new_message

#
# Queries for getting the objects by its properties
#
# fields order for the rating table: message_id(int), topic_id(int), user_id(int), user_rating(int), rate(int), rate_date(long)
get.objects.rating.by.message.id=SELECT message_id, topic_id, user_id, user_rating, rate, rate_date FROM rating WHERE message_id=?
# fields order for the moderate table: message_id(int), user_id(int), forum_id(int), creation_time(long)
get.objects.moderate.by.message.id=SELECT message_id, user_id, forum_id, creation_time FROM moderate WHERE message_id=?
# fields order for the new_rating table: id(int), message_id(int), rate(int)
get.objects.new.rating.by.message.id=SELECT id, message_id, rate FROM new_rating WHERE message_id=?

#
# Storing queries
#

# fields order for the version table: type(int), version(byte[64])
store.object.version=INSERT INTO version(type, version) VALUES (?, ?)
# fields order for the forum_group table: id(int), name(String), sort_order(int)
store.object.forum.group=INSERT INTO forum_group(id, name, sort_order) VALUES (?, ?, ?)
# fields order for the forum table: id(int), forum group(int), rated(int), in_top(int), rate_limit(int), subscribed(boolean), short_name(String), name(String)
store.object.forum=INSERT INTO forum(id, forum_group_id, rated, in_top, rate_limit, subscribed, short_name, name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
# fields order for the new_rating table: id(int), message_id(int), rate(int)
store.object.new.rating=INSERT INTO new_rating(id, message_id, rate) VALUES (?, ?, ?)
# fields order for the message table: id (int), topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String)
store.object.message=INSERT INTO message(id, topic_id, parent_id, user_id, forum_id, article_id, user_title_color, user_role, message_date, update_date, moderated_date, subject, message_name, user_nick, user_title, message, read) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
# fields order for the moderate table: message_id(int), user_id(int), forum_id(int), creation_time(long)
store.object.moderate=INSERT INTO moderate(message_id, user_id, forum_id, creation_time) VALUES (?, ?, ?, ?)
# fields order for the new_message table: id(int), parent_id(int), forum_id(int), subject(String), message(String)
store.object.new.message=INSERT INTO new_message(id, parent_id, forum_id, subject, message) VALUES (?, ?, ?, ?, ?)
# fields order for the new moderate table: id (int), message_id (int), action (int), forumId(int), description(String), as_moderator(boolean)
store.object.new.moderate=INSERT INTO new_moderate(id, message_id, action, forum_id, description, as_moderator) VALUES (?, ?, ?, ?, ?, ?)
# fields order for the user table: id (int), name (String), nick (String), real_name (String), email (String), home_page (String), specialization (String), where_from (String), origin (String)
store.object.user=INSERT INTO user(id, name, nick, real_name, email, home_page, specialization, where_from, origin) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
# fields order for the rating table: message_id(int), topic_id(int), user_id(int), user_rating(int), rate(int), rate_date(long)
store.object.rating=INSERT INTO rating(message_id, topic_id, user_id, user_rating, rate, rate_date) VALUES (?, ?, ?, ?, ?, ?)
# field: message_id
store.object.extra.message=INSERT INTO extra_message(message_id) VALUES (?)

#
# Queries to remove object or objects.
#
remove.object.forum=DELETE FROM forum WHERE id=?
remove.object.forum.group=DELETE FROM forum_group WHERE id=?
remove.object.user=DELETE FROM user WHERE id=?
remove.object.new.rating=DELETE FROM new_rating WHERE id=?
remove.object.new.message=DELETE FROM new_message WHERE id=?
remove.object.new.moderate=DELETE FROM new_moderate WHERE id=?
remove.object.message=DELETE FROM message WHERE id=?
remove.object.extra.message=DELETE FROM extra_message WHERE message_id=?

remove.objects.rating=DELETE FROM rating WHERE message_id=?
remove.objects.moderate=DELETE FROM moderate WHERE message_id=?

remove.all.objects.extra.message=DELETE FROM extra_message
remove.all.objects.new.rating=DELETE FROM new_rating

#
# Queries for getting all the ids of the objects
#
get.ids.forum=SELECT id FROM forum
get.ids.forum.group=SELECT id FROM forum_group
get.ids.new.rating=SELECT id FROM new_rating
get.ids.new.message=SELECT id FROM new_message
get.ids.message=SELECT id FROM message
get.ids.user=SELECT id FROM user
get.ids.extra.message=SELECT message_id FROM extra_message

#
# Updating queries
#
update.object.version=UPDATE version SET version=? WHERE type=?
# fields order for the message table: topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), notify_on_response (boolean), read (boolean), favorite (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String), id (int)
update.object.message=UPDATE message SET topic_id=?, parent_id=?, user_id=?, forum_id=?, article_id=?, user_title_color=?, user_role=?, message_date=?, update_date=?, moderated_date=?, subject=?, message_name=?, user_nick=?, user_title=?, message=?, read=? WHERE id=?
# fields order for the forum_group table: name(String), sort_order(int), id(int)
update.object.forum.group=UPDATE forum_group SET name=?, sort_order=? WHERE id=?
# fields order for the forum table: forum group(int), rated(int), in_top(int), rate_limit(int), short_name(String), name(String), id(int)
update.object.forum=UPDATE forum SET forum_group_id=?, rated=?, in_top=?, rate_limit=?, short_name=?, name=? WHERE id=?
# fields order for the forum table: subscribed(bool), id(int)
update.object.forum.subscribe=UPDATE forum SET subscribed=? WHERE id=?
# fields order for the new_message table: subject(String), message(String), id(int)
update.object.new.message=UPDATE new_message SET subject=?, message=? WHERE id=?
# Updates a last_child_date for message
update.message.recent.child.date=UPDATE message SET recent_child_date=? WHERE id=?
# Updates a read flag for message
update.message.read.flag=UPDATE message SET read=? WHERE id=?
# Updates a read flag for all the messages of a thread
update.thread.read.flag=UPDATE message SET read=? WHERE topic_id=?
# Updates a read flag for alle the messages in a forum
update.forum.messages.read.flag=UPDATE message SET read=? WHERE forum_id=?


#
# Utility queries
#
get.broken.topic.ids=SELECT DISTINCT \
 topic_id \
FROM \
 message \
WHERE \
 topic_id > 0 AND \
 topic_id NOT IN (SELECT id FROM message WHERE topic_id = 0)

get.ids.forum.by.forum.group=SELECT id FROM forum WHERE forum_group=?
get.ids.forum.subscribed=SELECT id FROM forum WHERE subscribed=1
get.ids.message.by.parent.id=SELECT id FROM message WHERE parent_id=?
get.ids.topic.message.by.forum.id=SELECT id FROM message WHERE forum_id=? AND parent_id=0
get.messages.number.in.forum=SELECT count(id) FROM message WHERE forum_id=?
get.unread.messages.number.in.forum=SELECT count(id) FROM message WHERE forum_id=? AND read = 0
get.unread.messages.number.in.thread=SELECT count(id) FROM message WHERE topic_id=? AND read = 0
get.unread.messages.number=SELECT count(id) FROM message WHERE read = 0
get.unread.replies.number=SELECT count(id) FROM message WHERE parent_id IN (SELECT id FROM message WHERE read = 1 AND user_id = ?)
get.thread.stat.data=SELECT max(message_date), count(id) FROM message WHERE topic_id = ?
get.last.message.date.in.forum=SELECT max(message_date) FROM message WHERE forum_id=?
is.forum.has.messages=SELECT FIRST(id) FROM message WHERE forum_id=?
is.messages.exist=SELECT COUNT(id)>0 FROM message WHERE id=?
get.ids.message.by.topic.id=SELECT id FROM message WHERE topic_id=?

get.parent.id.for.message.id=SELECT parent_id FROM message WHERE id=?
