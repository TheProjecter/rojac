## Code convension for SQL: write reserved words in upper case, write table and field names in lower case.

#
# Queries for retrieving all the objects
#

# fields order for the version table: type(int), version_data(byte[64])
get.objects.version=SELECT type, version_data FROM version
# fields order for the forum_group table: id(int), name(String), sort_order(int)
get.objects.forum.group=SELECT id, name, sort_order FROM forum_group
# fields order for the forum table: id(int), forum group(int), rated(int), in_top(int), rate_limit(int), subscribed(boolean), short_name(String), name(String)
get.objects.forum=SELECT id, forum_group_id, rated, in_top, rate_limit, subscribed, short_name, name FROM forum
# fields order for the new_rating table: id(int), message_id(int), rate(int)
get.objects.new.rating=SELECT id, message_id, rate FROM new_rating
# fields order for the message table: id (int), topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), notify_on_response (boolean), read (boolean), favorite (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String)
get.objects.message=SELECT id, topic_id, parent_id, user_id, forum_id, article_id, user_title_color, user_role, notify_on_response, read, favorite, message_date, update_date, moderated_date, subject, message_name, user_nick, user_title, message FROM message
# fields order for the moderate table: message_id(int), user_id(int), forum_id(int), creation_time(long)
get.objects.moderate=SELECT message_id, user_id, forum_id, creation_time FROM moderate
# fields order for the new_message table: id (int), parent_id(int), forum_id(int), subject(String), message(String)
get.objects.new.message=SELECT id, parent_id, forum_id, subject, message FROM new_message
# fields order for the user table: id (int), name (String), nick (String), real_name (String), email (String), home_page (String), specialization (String), where_from (String), origin (String)
get.objects.user=SELECT id, name, nick, real_name, email, home_page, specialization, where_from, origin FROM user
# fields order for the rating table: message_id(int), topic_id(int), user_id(int), user_rating(int), rate(int), rate_date(long)
get.objects.rating=SELECT message_id, topic_id, user_id, user_rating, rate, rate_date FROM rating

#
# Queries for retrieving the object by its id
#

# fields order for the version table: type(int), version_data(byte[64])
get.object.version=SELECT type, version_data FROM version WHERE type=?
# fields order for the forum_group table: id(int), name(String), sort_order(int)
get.object.forum.group=SELECT id, name, sort_order FROM forum_group WHERE id=?
# fields order for the forum table: id(int), forum group(int), rated(int), in_top(int), rate_limit(int), subscribed(boolean), short_name(String), name(String)
get.object.forum=SELECT id, forum_group_id, rated, in_top, rate_limit, subscribed, short_name, name FROM forum WHERE id=?
# fields order for the new_rating table: id(int), message_id(int), rate(int)
get.object.new.rating=SELECT id, message_id, rate FROM new_rating WHERE id=?
# fields order for the message table: id (int), topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), notify_on_response (boolean), read (boolean), favorite (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String)
get.object.message=SELECT id, topic_id, parent_id, user_id, forum_id, article_id, user_title_color, user_role, notify_on_response, read, favorite, message_date, update_date, moderated_date, subject, message_name, user_nick, user_title, message FROM message WHERE id=?
# fields order for the new_message table: id (int), parent_id(int), forum_id(int), subject(String), message(String)
get.object.new.message=SELECT id, parent_id, forum_id, subject, message FROM new_message WHERE id=?
# fields order for the user table: id (int), name (String), nick (String), real_name (String), email (String), home_page (String), specialization (String), where_from (String), origin (String)
get.object.user=SELECT id, name, nick, real_name, email, home_page, specialization, where_from, origin FROM user WHERE id=?

#
# Queries for getting the objects by its properties
#
# fields order for the rating table: message_id(int), topic_id(int), user_id(int), user_rating(int), rate(int), rate_date(long)
get.objects.rating.by.message.id=SELECT message_id, topic_id, user_id, user_rating, rate, rate_date FROM rating WHERE message_id=?

#
# Storing queries
#

# fields order for the version table: type(int), version_data(byte[64])
store.object.version=INSERT INTO version(type, version_data) VALUES (?, ?)
# fields order for the forum_group table: id(int), name(String), sort_order(int)
store.object.forum.group=INSERT INTO forum_group(id, name, sort_order) VALUES (?, ?, ?)
# fields order for the forum table: id(int), forum group(int), rated(int), in_top(int), rate_limit(int), subscribed(boolean), short_name(String), name(String)
store.object.forum=INSERT INTO forum(id, forum_group_id, rated, in_top, rate_limit, subscribed, short_name, name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
# fields order for the new_rating table: id(int), message_id(int), rate(int)
store.object.new.rating=INSERT INTO new_rating(id, message_id, rate) VALUES (?, ?, ?)
# fields order for the message table: id (int), topic_id (int), parent_id (int), user_id (int), forum_id (int), article_id (int), user_title_color (int), user_role (int), notify_on_response (boolean), read (boolean), favorite (int), message_date (long), update_date (long), moderated_date (long), subject (String), message name (String), user nick (String), user title (String), message (String)
store.object.message=INSERT INTO message(id, topic_id, parent_id, user_id, forum_id, article_id, user_title_color, user_role, notify_on_response, read, favorite, message_date, update_date, moderated_date, subject, message_name, user_nick, user_title, message) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
# fields order for the moderate table: message_id(int), user_id(int), forum_id(int), creation_time(long)
store.object.moderate=INSERT INTO moderate(message_id, user_id, forum_id, creation_time) VALUES (?, ?, ?, ?)
# fields order for the new_message table: id (int), parent_id(int), forum_id(int), subject(String), message(String)
store.object.new.message=INSERT INTO new_message(id, parent_id, forum_id, subject, message) VALUES (?, ?, ?, ?, ?)
# fields order for the user table: id (int), name (String), nick (String), real_name (String), email (String), home_page (String), specialization (String), where_from (String), origin (String)
store.object.user=INSERT INTO user(id, name, nick, real_name, email, home_page, specialization, where_from, origin) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
# fields order for the rating table: message_id(int), topic_id(int), user_id(int), user_rating(int), rate(int), rate_date(long)
store.object.rating=INSERT INTO rating(message_id, topic_id, user_id, user_rating, rate, rate_date) VALUES (?, ?, ?, ?, ?, ?)

#
# Queries to remove object or objects.
#
remove.object.forum=DELETE FROM forum WHERE id=?

remove.objects.rating=DELETE FROM rating WHERE message_id=?

#
# Queries for getting all the ids of the objects
#
get.ids.forum=SELECT id FROM forum

#
# Other queries
#
get.ids.forum.by.forum.group=SELECT id FROM forum WHERE forum_group=?